// This is an example of OOP code



level 3:

var Vector = {};
setType (Vector, "Vector");

Vector.Points = {}
Vector.length = function { // no parentheses here means no parentheses (necessary) when called
	if (THIS.Points == null) {return null;}
	return THIS.Points.length; // "THIS" is a keyword reffering to whatever table held the function
}

Vector.new = function (Arg) {
	var ArgType == getType (Arg);
	var NewVector = Vector.clone();
	if (ArgType == "table") {
		if (not tableContainsOnlyType (Arg, "int")) {crash ("You cannot initialize a vector with non-int points.");}
		NewVector.Points = Arg.clone();
		return NewVector;
	}
	if (ArgType == "int") {
		NewVector.Points = newTable (Arg);
		return NewVector;
	}
	if (ArgType == "null") {
		NewVector.Points = null;
		return NewVector;
	}
	crash ("Cannot create new vector; Arg type must be either table, int, or null.");
}



Vector.onOperation = function (Value, Operation) {
	var ValueType = getType (Value);
	
	if (Operation == "indexed") {
		if (ValueType != int) {crash ("You can only index Vectors with ints.");}
		if (Value > THIS.length or Value < 1) {crash ("Vector index out of bounds; size: " .. THIS.length .. ", index: " .. DV .. ".");}
		return THIS.Points[DV];
	}
	
	if (ValueType == "Vector") {
		if (THIS.Points == null or Value.Points == null) {crash ("You cannot perform operations on vectors with null points.");}
		var NewVector = Vector.new();
		if (Operation == "+") {
			if (THIS.length != Value.length) {crash ("You cannot add two vectors with different lengths.");}
			for (var i = 1, THIS.length) {
				NewVector[i] = THIS[i] + Value[i];
			}
			return NewVector;
		}
		if (Operation == "..") {
			NewVector.Points = THIS.Points .. Value.Points;
			return NewVector;
		}
		// continues for other operations
	}
	
	// continues for other DVs
}



Vector.castTo = function (NewType) {
	
	if (NewType == "table") {
		return THIS.Points.clone();
	}
	
	if (NewType == "string") {
		var OutputString = "[" .. THIS[1];
		for (var i = 2, THIS.length) {
			OutputString ..= ", " .. THIS[i];
		}
		return OutputString .. "]";
	}
	
	crash ("Cannot cast Vector to " .. NewType);
	
}




var ExampleVector1 = Vector.new ({2, 5});
var ExampleVector2 = Vector.new ({3, 9});

var ExampleVector3 = ExampleVector1 + ExampleVector2;

print (ExampleVector3); // prints "[5, 14]"